{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","event","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;IAAMA,a;AACF,2BAAYC,UAAZ,EAAuB;AAAA;;AACnB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AAGH;;;;iCAEQC,U,EAAW;AAAA;;AAChB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACnC,oBAAIC,UAAU,MAAKN,WAAL,CACVO,WADU,CACE,MAAKN,MADP,EACc,WADd,EAEVO,WAFU,CAEE,MAAKP,MAFP,EAGVQ,GAHU,CAGNP,UAHM,CAAd;;AAMAI,wBAAQI,SAAR,GAAmB,iBAAQ;AACvBN,4BAAQ,8BAAR;AACH,iBAFD;;AAIAE,wBAAQK,OAAR,GAAkB,iBAAQ;AACtBC,4BAAQC,GAAR,CAAYC,MAAMC,MAAN,CAAaC,KAAzB;AACAX,2BAAO,yCAAP;AACH,iBAHD;AAKH,aAhBM,CAAP;AAiBH;;;qCAEW;AAAA;;AACR,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACnC,oBAAIY,SAAS,OAAKjB,WAAL,CACIO,WADJ,CACgB,CAAC,aAAD,CADhB,EACiC,WADjC,EAEIC,WAFJ,CAEgB,aAFhB,EAGIU,UAHJ,EAAb;;AAKA,oBAAIC,cAAc,EAAlB;;AAGAF,uBAAOP,SAAP,GAAmB,iBAAQ;AACvB,wBAAIU,QAAQN,MAAMC,MAAN,CAAaM,MAAzB;AACA,wBAAID,KAAJ,EAAU;AACN,4BAAIE,OAAOF,MAAMG,KAAjB;;AAEAJ,oCAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA0BJ,KAAKK,WAA/B,EAA2CL,KAAKM,MAAhD,CAAjB;AACAR,8BAAMS,QAAN;AACH,qBALD,MAMI;AACAzB,gCAAQe,WAAR;AACH;AACJ,iBAXD;;AAaAF,uBAAON,OAAP,GAAiB,iBAAQ;AACrBC,4BAAQC,GAAR,CAAYC,MAAMC,MAAN,CAAaC,KAAzB;AACAX,2BAAO,qCAAP;AACH,iBAHD;AAIH,aA1BM,CAAP;AA2BH;;;qCAEW;AAAA;;AACR,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACnC,oBAAIY,SAAS,OAAKjB,WAAL,CACIO,WADJ,CACgB,CAAC,aAAD,CADhB,EACiC,WADjC,EAEIC,WAFJ,CAEgB,aAFhB,EAGIsB,KAHJ,EAAb;;AAOAb,uBAAOP,SAAP,GAAmB,iBAAQ;AACvBN,4BAAQ,kCAAR;AACH,iBAFD;;AAIAa,uBAAON,OAAP,GAAiB,iBAAQ;AACrBC,4BAAQC,GAAR,CAAYC,MAAMC,MAAN,CAAaC,KAAzB;AACAX,2BAAO,+BAAP;AACH,iBAHD;AAIH,aAhBM,CAAP;AAiBH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\r\n    constructor(connection){\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n\r\n        \r\n    }\r\n\r\n    adiciona(negociacao){\r\n        return new Promise((resolve,reject) => {\r\n            let request = this._connection.\r\n                transaction(this._store,'readwrite').\r\n                objectStore(this._store).\r\n                add(negociacao);\r\n\r\n            \r\n            request.onsuccess= event =>{\r\n                resolve(\"Negociação Salva com Sucesso\");\r\n            };\r\n\r\n            request.onerror = event =>{\r\n                console.log(event.target.error);\r\n                reject(\"não foi possivel adicionar a negociação\");\r\n            };\r\n\r\n        });\r\n    }\r\n\r\n    listaTodos(){\r\n        return new Promise((resolve,reject) => {\r\n            let cursor = this._connection\r\n                            .transaction(['negociacoes'], 'readwrite')\r\n                            .objectStore('negociacoes')\r\n                            .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n\r\n            cursor.onsuccess = event =>{\r\n                let atual = event.target.result;\r\n                if (atual){\r\n                    let dado = atual.value;\r\n                    \r\n                    negociacoes.push(new Negociacao(dado._data,dado._quantidade,dado._valor));\r\n                    atual.continue();\r\n                }\r\n                else{\r\n                    resolve(negociacoes);\r\n                }\r\n            }\r\n\r\n            cursor.onerror = event =>{\r\n                console.log(event.target.error);\r\n                reject(\"Erro ao buscar todas as negociações\");\r\n            }\r\n        });\r\n    }\r\n\r\n    apagaTodos(){\r\n        return new Promise((resolve,reject) => {\r\n            let cursor = this._connection\r\n                            .transaction(['negociacoes'], 'readwrite')\r\n                            .objectStore('negociacoes')\r\n                            .clear();\r\n\r\n\r\n\r\n            cursor.onsuccess = event =>{\r\n                resolve(\"negociações apagadas com sucesso\");\r\n            }\r\n\r\n            cursor.onerror = event =>{\r\n                console.log(event.target.error);\r\n                reject(\"Erro ao apagar as negociações\");\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n}"]}