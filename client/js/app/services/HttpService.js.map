{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;sCAEYC,G,EAAI;AACd,gBAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAWF,IAAIG,UAAf,CAAN;AACb,mBAAOH,GAAP;AAEH;;;4BAEGI,G,EAAK;AAAA;;AACL,mBAAOC,MAAMD,GAAN,EACNE,IADM,CACD;AAAA,uBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aADC,EAENM,IAFM,CAED;AAAA,uBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAFC,CAAP;AAIH;;;6BAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ,mBAAOJ,MAAMD,GAAN,EAAU;AACbM,yBAAS,EAAC,gBAAgB,kBAAjB,EADI;AAEbC,wBAAQ,MAFK;AAGbC,sBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHO,aAAV,EAKNH,IALM,CAKD;AAAA,uBAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aALC,CAAP;AASH","file":"HttpService.js","sourcesContent":["class HttpService {\r\n\r\n    _handleErrors(res){\r\n        if (!res.ok) throw new Error (res.statusText);\r\n        return res;\r\n        \r\n    }\r\n\r\n    get(url) {\r\n        return fetch(url)\r\n        .then(res => this._handleErrors(res))\r\n        .then(res => res.json());\r\n\r\n    }\r\n\r\n    post(url, dado) {\r\n\r\n        return fetch(url,{\r\n            headers: {'Content-type': \"application/json\"},\r\n            method: \"post\",\r\n            body: JSON.stringify(dado)\r\n        })\r\n        .then(res => this._handleErrors(res));\r\n        \r\n\r\n\r\n    }\r\n}"]}